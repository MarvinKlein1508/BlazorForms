@namespace BlazorForms.Web.Components
@using BlazorForms.Application.Domain.Elements
@inject IDialogService DialogService
<SectionContent SectionName="additional-css">
    <link rel="stylesheet" href="@Assets["/assets/css/form-editor.css"]" />
</SectionContent>

<div class="form-editor">
    <div class="form-editor-appbar">
        <FluentAppBar Orientation="Orientation.Horizontal" Style="width: 100%; justify-content: space-around;">
            <FluentAppBarItem Href="/"
                              Match="NavLinkMatch.All"
                              IconRest="HomeIcon()"
                              IconActive="HomeIcon(active: true)"
                              Text="Home"
                              OnClick="HandleOnClick" />
            <FluentAppBarItem Href="/AppBar"
                              IconRest="AppBarIcon()"
                              IconActive="AppBarIcon(active: true)"
                              Text="AppBar"
                              OnClick="HandleOnClick" />
            <FluentAppBarItem IconRest="WhatsNewIcon()"
                              IconActive="WhatsNewIcon(active: true)"
                              Text="What's New'"
                              OnClick="ShowSuccessAsync" />
            <FluentAppBarItem Href="@(null)"
                              IconRest="IconsIcon()"
                              IconActive="IconsIcon(active: true)"
                              Text="Icons"
                              OnClick="ShowWarningAsync" />
            <FluentAppBarItem Href="/Dialog"
                              IconRest="DialogIcon()"
                              IconActive="DialogIcon(active: true)"
                              Text="Dialog"
                              OnClick="HandleOnClick" />
        </FluentAppBar>
    </div>
    <div class="form-editor-wrapper">
        @if (_selectedFormElement is not null)
        {
            <div class="form-element-editor">
                <FluentTabs>
                    <FluentTab Label="General">
                        <FluentTextField Value="@_selectedFormElement.GetElementType().ToString()" ReadOnly />
                    </FluentTab>
                </FluentTabs>
            </div>
        }
        else
        {
            <FluentDragContainer TItem="FormRow" OnDropEnd="OnRowDropEnd" Class="dropzone">
                <FluentDragContainer TItem="FormColumn" OnDropEnd="OnColumnDropEnd" Class="dropzone">
                    <FluentDragContainer TItem="FormElementBase" OnDropEnd="OnDropElement" Class="dropzone form-editor-grid">
                        <div class="form-editor-content">
                            @foreach (var row in _testForm.Rows)
                            {
                                <FluentDropZone StopPropagation="true" Item="row" Class="form-row" Draggable="true" Droppable="true">
                                    <span>Row: @row.RowId</span>
                                    @if (row.Columns.Count == 0)
                                    {
                                        <FluentDropZone StopPropagation="true" Data="@row" TItem="FormColumn" Class="empty-zone" Draggable="false" Droppable="true" />
                                    }
                                    else
                                    {
                                        @foreach (var column in row.Columns)
                                        {
                                            <FluentDropZone StopPropagation="true" Item="column" Data="@row" Class="form-column form-editor-flex" Draggable="true" Droppable="true">
                                                <span>Column: @column.ColumnId</span>
                                                @if (column.Elements.Count == 0)
                                                {
                                                    <FluentDropZone StopPropagation="true" Data="@column" TItem="FormElementBase" Class="empty-zone" Draggable="false" Droppable="true" />
                                                }
                                                else
                                                {
                                                    @foreach (var element in column.Elements)
                                                    {
                                                        <FluentDropZone StopPropagation="true" Item="element" Data="@column" Class="form-element" Draggable="true" Droppable="true">
                                                            <span>[@element.GetElementType()] @element.Name</span>
                                                            <FluentButton OnClick="() => _selectedFormElement = element" IconEnd="@(new Icons.Regular.Size20.Edit())" />
                                                        </FluentDropZone>
                                                    }
                                                }
                                            </FluentDropZone>
                                        }
                                    }
                                </FluentDropZone>
                            }
                        </div>
                        <div class="toolbar-wrapper">
                            <h4>Toolbar</h4>
                            <ul id="element-toolbar">
                                @foreach (var element in ToolbarElements)
                                {
                                    <li class="toolbar-element">
                                        <FluentDropZone StopPropagation="true" Item="element" OnDragStart="(e) => _dragFromToolbar = true" TItem="FormElementBase" Draggable="true" Droppable="false">
                                            @element.GetElementType()
                                        </FluentDropZone>
                                    </li>
                                }
                            </ul>
                        </div>
                    </FluentDragContainer>
                </FluentDragContainer>
            </FluentDragContainer>
        }
    </div>
</div>




