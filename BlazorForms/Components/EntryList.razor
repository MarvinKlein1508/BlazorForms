@inject FormEntryService formEntryService
@inject SavedFilterService savedFilterService
@inject NavigationManager navigationManager
@inject IBlazorDownloadFileService downloadService
@inject IJSRuntime jsRuntime
@inject AuthService authService
@inject IStringLocalizer<App> appLocalizer
@inject IStringLocalizer<EntryList> localizer

<div class="row">
    <div class="col-lg-3 col-sm-12 order-lg-3">
        <div class="card">
            <div class="card-header">
                <h4>@appLocalizer["FILTER_TITLE"]</h4>
            </div>
            <div class="card-content" style="padding: 0 1.3rem;">
                @if (Filter is not null)
                {
                    <EditForm Model="Filter" OnValidSubmit="async () => await LoadAsync(true)">
                        <div class="form-floating mb-3">
                            <InputText @bind-Value="Filter.SearchPhrase" class="form-control" id="form-filter-searchphrase" placeholder="@appLocalizer["FILTER_PLACEHOLDER_SEARCHTERM"]" />
                            <label for="form-filter-searchphrase">@appLocalizer["FILTER_PLACEHOLDER_SEARCHTERM"]</label>
                        </div>

                        <div class="form-floating mb-3">
                            <InputSelect @bind-Value="Filter.StatusId" class="form-select" id="form-filter-status" aria-placeholder="@localizer["FILTER_PLACHOLDER_STATUS"]">
                                <option value="0">@appLocalizer["ALL"]</option>
                                @foreach (var status in Statuses)
                                {
                                    var description = status.GetLocalization(CultureInfo.CurrentCulture);
                                    <option value="@status.UserFilterId">@description?.Name</option>
                                }
                            </InputSelect>
                            <label for="form-filter-status">@localizer["FILTER_PLACHOLDER_STATUS"]</label>
                            <ValidationMessage For="() => Filter.StatusId" />
                        </div>

                        <div class="form-floating mb-3">
                            <InputSelect @bind-Value="Filter.Priority" class="form-select" id="form-filter-priority" aria-placeholder="@localizer["FILTER_PLACEHOLDER_PRIORITY"]">
                                <option value="">@appLocalizer["ALL"]</option>
                                <option value="@BlazorForms.Core.Enums.Priority.Low">@localizer["PRIORITY_LOW"]</option>
                                <option value="@BlazorForms.Core.Enums.Priority.Normal">@localizer["PRIORITY_NORMAL"]</option>
                                <option value="@BlazorForms.Core.Enums.Priority.High">@localizer["PRIORITY_HIGH"]</option>
                            </InputSelect>
                            <label for="form-filter-priority">@localizer["FILTER_PLACEHOLDER_PRIORITY"]</label>
                            <ValidationMessage For="() => Filter.Priority" />
                        </div>

                        <div class="toolbar">
                            @if (Filter is not null && Filter != DefaultFilter)
                            {
                                <button type="button" class="btn btn-danger me-1" @onclick="ResetFilterAsync"><i class="bi bi-ban"></i> @appLocalizer["FILTER_RESET"]</button>
                            }

                            <button type="submit" class="btn btn-primary">@appLocalizer["FILTER_BUTTON_SEARCH"]</button>
                        </div>

                    </EditForm>
                }
            </div>
        </div>
    </div>
    <div class="col-lg-9 col-sm-12">

        <div class="card">
            <div class="card-content">
                <!-- Table with no outer spacing -->
                <div class="table-responsive">
                    <table class="table mb-0 align-middle">
                        <thead>
                            <tr>
                                <th>@localizer["TH_ID"]</th>
                                <th>@localizer["TH_FORM"]</th>
                                <th>@localizer["TH_DOCUMENT_NAME"]</th>
                                <th>@localizer["TH_PRIORITY"]</th>
                                <th>@localizer["TH_STATUS"]</th>
                                <th>@localizer["TH_CREATION_DATE"]</th>
                                <th>@localizer["TH_CREATION_USER"]</th>
                                <th>@localizer["TH_LAST_CHANGE"]</th>
                                <th>@localizer["TH_LAST_USER"]</th>
                                <th class="text-right action-column">@localizer["TH_ACTION"]</th>
                            </tr>
                        </thead>
                        <tbody>
                            <Virtualize Items="Data" Context="item">
                                @{
                                    var status = AppdatenService.Get<FormStatus>(item.StatusId);
                                    string statusName = status?.GetLocalization(CultureInfo.CurrentCulture)?.Name ?? appLocalizer["UNKOWN"];
                                }

                                <tr>
                                    <td>@item.EntryId</td>
                                    <td>@item.FormName</td>
                                    <td><a href="/Entry/@item.EntryId">@item.Name</a></td>
                                    <td>@GetPriority(item.Priority)</td>
                                    <td>@statusName</td>
                                    <td>@item.CreationDate.ToShortDateString()</td>
                                    <td>@item.UsernameCreator</td>
                                    <td>@item.LastChange.ToString()</td>
                                    <td>@item.UsernameLastChange</td>
                                    <td class="text-right text-nowrap action-column">
                                        @if (CanDeleteEntry(item))
                                        {
                                            <Button Color="ButtonColor.Danger" @onclick="async () => await ShowDeleteModalAsync(item)" Size="ButtonSize.Large" Class="me-1">
                                                <Icon Name="IconName.Trash" />
                                            </Button>
                                        }


                                        <Button Color="ButtonColor.Info" @onclick="() => DownloadAsync(item)" Disabled="DownloadingList.Contains(item)" Loading="DownloadingList.Contains(item)" Size="ButtonSize.Large" LoadingText="">
                                            <Icon Name="IconName.Download" />
                                        </Button>


                                        <a class="btn btn-primary btn-lg" href="/Entry/@item.EntryId"><Icon Name="IconName.PencilSquare" /></a>
                                    </td>
                                </tr>
                            </Virtualize>

                            @if (!Data.Any())
                            {
                                <tr>
                                    <td colspan="9" class="text-center">@localizer["NO_RESULTS"]</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            </div>

        </div>

        @if (Filter is not null && TotalPages > 1)
        {
            <Pagination ActivePageNumber="Filter.PageNumber"
                        TotalPages="TotalPages"
                        PageChanged="OnPageChangedAsync"
                        FirstLinkIcon="IconName.ChevronDoubleLeft"
                        PreviousLinkIcon="IconName.ChevronLeft"
                        NextLinkIcon="IconName.ChevronRight"
                        LastLinkIcon="IconName.ChevronDoubleRight" />
        }
    </div>
</div>

<ConfirmDialog @ref="_deleteModal" />