@page "/"
@layout EmptyLayout
@using FormularPortal.Core.Models
@inject DragDropService<FormElement> dragDropServiceElements
@inject DragDropService<FormRow> dragDropServiceRows
@inject DragDropService<FormColumn> dragDropServiceColumns
<PageTitle>Index</PageTitle>
<div id="form-wrapper">
    <div id="form-editor">
        <div class="grid-container">
            <Dropzone Class="large-dropzone" Items="Rows" Context="row" ItemWrapperClass="@((x) => $"formular-row")">
                <Dropzone OnItemDrop="OnColumnDroppedAsync" TItem="FormColumn" Items="row.Columns" Context="column" ItemWrapperClass="@((x) => $"formular-column")">
                    <div class="grid-container">
                        <div class="grid-item">
                            <Dropzone Items="column.Elements" Context="element">
                                <div class="formular-element grid-item">
                                    <div class="element-wrapper">@element <button type="button" class="btn btn-primary" @onclick="() => SelectedFormElement = element"><i class="fa-solid fa-edit"></i></button></div>
                                </div>
                            </Dropzone>
                        </div>
                    </div>
                </Dropzone>
            </Dropzone>
        </div>

    </div>
    <div class="toolbar-wrapper">
        <h4>Toolbar</h4>
        <ul id="element-toolbar">
            <li draggable="true" class="toolbar-element" @ondragstart="StartDragRowFromToolbar">Neue Zeile</li>
            <li draggable="true" class="toolbar-element" @ondragstart="StartDragColumnFromToolbar">Neue Column</li>
            @foreach (var item in AppdatenService.Elements)
            {
                <li class="toolbar-element" draggable="true" @ondragstart="async () => await OnToolbarElementDragStartAsync(item)">@item</li>
            }
        </ul>

        <div class="delete-wrapper">
            <div class="delete-zone"
                 ondragover="event.preventDefault();"
                 ondragstart="event.dataTransfer.setData('', event.target.id);"
                 @ondrop="() => DropDelete()">
                 <i class="fa-solid fa-trash"></i>
            </div>
        </div>

    </div>
</div>

@if (SelectedFormElement is not null)
{
    <ConfirmModal Title="Element bearbeiten"
        OnClosed="() => SelectedFormElement = null">
        <EditForm Model="SelectedFormElement">
            <div class="row">
                <div class="col-12">
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="SelectedFormElement.Name" class="form-control" id="formelement-name" placeholder="Name" required autocomplete="off" />
                        <label for="formelement-name">Name</label>
                        <ValidationMessage For="() => SelectedFormElement.Name" />
                    </div>
                </div>
            </div>
        </EditForm>
    </ConfirmModal>
}




