@page "/Forms/{FormId:int}"
@page "/Entry/{EntryId:int}"
@inject FormService formService
@inject FormEntryService formEntryService
@inject AuthService authService
@inject IJSRuntime jsRuntime
@inject NavigationManager navigationManager
@inject IDbProviderService dbProviderService
@inject IOptions<EmailSettings> emailConfig

@if (Input is not null && Input.Form is not null)
{

    <PageTitle>@Input.Form.Name ausfüllen</PageTitle>


    <h2 class="d-flex">
        <span class="page-title">@Input.Form.Name</span>
        @if (Input.EntryId > 0)
        {
            @if (IsAdmin || IsManager)
            {
                <button type="button" class="btn btn-primary me-1" @onclick="() => _showHistory = true">Verlauf</button>
            }
            <button type="button" class="btn btn-outline-secondary" @onclick="OpenStatusModalAsync">
                @GetStatus()
                @if (IsAdmin || IsManager)
                {
                    <span class="ms-1"><i class="fa-solid fa-edit"></i></span>
                }
            </button>
        }
    </h2>

    <EditForm Model="Input" @ref="_form">
        <FluentValidationValidator />
        <ValidationSummary />
        <div class="row">
            <div class="col-12">
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.Name" class="form-control" id="form-name" placeholder="Name des Dokuments" />
                    <label for="form-name">Name des Dokuments</label>
                    <ValidationMessage For="() => Input.Name" />
                </div>
            </div>
        </div>
        @foreach (var row in Input.Form.Rows)
        {
            @if (row.IsVisible())
            {
                <div class="row">
                    @foreach (var column in row.Columns)
                    {
                        @if (column.IsVisible())
                        {
                            <div class="@row.GetColumnClass()">
                                @foreach (var element in column.Elements)
                                {
                                    if (!element.IsVisible())
                                    {
                                        continue;
                                    }

                                    @if (element is FormCheckboxElement formCheckboxElement)
                                    {
                                        <div class="form-check">
                                            <div class="checkbox">
                                                <InputCheckbox @bind-Value="formCheckboxElement.Value" id="@($"form-{element.Guid}")" class="form-check-input" />
                                                <label for="form-@element.Guid">@element.Name</label>
                                                <ValidationMessage For="() => formCheckboxElement.Value" />
                                            </div>
                                        </div>
                                    }
                                    else if (element is FormDateElement formDateElement)
                                    {
                                        <div class="form-floating mb-3">
                                            <InputDate @bind-Value="formDateElement.Value" class="form-control" id="@($"form-{element.Guid}")" placeholder="@element.Name" />
                                            <label for="@($"form-{element.Guid}")">@element.Name</label>
                                            <ValidationMessage For="() => formDateElement.Value" />
                                        </div>
                                    }
                                    else if (element is FormFileElement formFileElement)
                                    {
                                        <div class="mb-3">
                                            <label role="button" class="btn btn-dark" tabindex="0" for="@($"form-{element.Guid}")">
                                                @element.Name
                                                <InputFile accept="@formFileElement.GetAcceptTypesDefinition(AppdatenService.MimeTypes)" OnChange="(e) => UploadFileAsync(formFileElement, e)" id="@($"form-{element.Guid}")" class="d-none" multiple="@formFileElement.AllowMultipleFiles" />
                                            </label>

                                            <FileListing Files="formFileElement.Values" />
                                        </div>
                                        <ValidationMessage For="() => formFileElement.Values" />
                                    }
                                    else if (element is FormLabelElement formLabelElement)
                                    {
                                        @((MarkupString)formLabelElement.Description)
                                    }
                                    else if (element is FormNumberElement formNumberElement)
                                    {
                                        <div class="form-floating mb-3">
                                            <InputNumber @bind-Value="formNumberElement.Value" class="form-control" id="@($"form-{element.Guid}")" placeholder="@element.Name" step="@formNumberElement.GetStep()" disabled="@(formNumberElement.IsValueCalculated)" />
                                            <label for="@($"form-{element.Guid}")">@element.Name</label>
                                            <ValidationMessage For="() => formNumberElement.Value" />
                                        </div>
                                    }
                                    else if (element is FormRadioElement formRadioElement)
                                    {
                                        <div class="mb-3">
                                            <label>@element.Name</label>
                                            <InputRadioGroup @bind-Value="formRadioElement.Value">
                                                @foreach (var item in formRadioElement.Options)
                                                {
                                                    <div class="form-check">
                                                        <InputRadio Value="@item.Name" class="form-check-input" id="@($"radio-{item.GetHashCode()}")" />
                                                        <label class="form-check-label" for="@($"radio-{item.GetHashCode()}")">
                                                            @item.Name
                                                        </label>
                                                    </div>
                                                }
                                            </InputRadioGroup>
                                            <ValidationMessage For="() => formRadioElement.Value" />
                                        </div>

                                    }
                                    else if (element is FormSelectElement formSelectElement)
                                    {
                                        <div class="form-floating mb-3">
                                            <InputSelect @bind-Value="formSelectElement.Value" class="form-select" id="@($"form-{element.Guid}")" aria-label="@element.Name">
                                                <option value="">--- Auswahl ---</option>
                                                @foreach (var item in formSelectElement.Options)
                                                {
                                                    <option value="@item.Name">@item.Name</option>
                                                }
                                            </InputSelect>
                                            <label for="@($"form-{element.Guid}")">@element.Name</label>
                                            <ValidationMessage For="() => formSelectElement.Value" />
                                        </div>
                                    }
                                    else if (element is FormTableElement formTableElement)
                                    {
                                        <div class="table-responsive">
                                            <table class="table mb-3 table-xs">
                                                <thead>
                                                    <tr>
                                                        <th class="text-center" colspan="@(formTableElement.Elements.Count + 1)">@element.Name</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var tableRow in formTableElement.ElementValues)
                                                    {
                                                        <tr>
                                                            @foreach (var table_element in tableRow)
                                                            {
                                                                <td>
                                                                    @if (table_element is FormCheckboxElement tableFormCheckboxElement)
                                                                    {
                                                                        <div class="form-check">
                                                                            <div class="checkbox">
                                                                                <InputCheckbox @bind-Value="tableFormCheckboxElement.Value" id="@($"form-{table_element.Guid}")" class="form-check-input" />
                                                                                <label for="form-@table_element.Guid">@table_element.Name</label>
                                                                                <ValidationMessage For="() => tableFormCheckboxElement.Value" />
                                                                            </div>
                                                                        </div>
                                                                    }
                                                                    else if (table_element is FormDateElement tableFormDateElement)
                                                                    {
                                                                        <div class="form-floating mb-3">
                                                                            <InputDate @bind-Value="tableFormDateElement.Value" class="form-control" id="@($"form-{table_element.Guid}")" placeholder="@table_element.Name" />
                                                                            <label for="@($"form-{table_element.Guid}")">@table_element.Name</label>
                                                                            <ValidationMessage For="() => tableFormDateElement.Value" />
                                                                        </div>
                                                                    }
                                                                    else if (table_element is FormNumberElement tableFormNumberElement)
                                                                    {
                                                                        <div class="form-floating mb-3">
                                                                            <InputNumber @bind-Value="tableFormNumberElement.Value" class="form-control" id="@($"form-{table_element.Guid}")" placeholder="@table_element.Name" step="@tableFormNumberElement.GetStep()" disabled="@(tableFormNumberElement.IsValueCalculated)" />
                                                                            <label for="@($"form-{table_element.Guid}")">@table_element.Name</label>
                                                                            <ValidationMessage For="() => tableFormNumberElement.Value" />
                                                                        </div>
                                                                    }
                                                                    else if (table_element is FormSelectElement tableFormSelectElement)
                                                                    {
                                                                        <div class="form-floating mb-3">
                                                                            <InputSelect @bind-Value="tableFormSelectElement.Value" class="form-select" id="@($"form-{table_element.Guid}")" aria-label="@table_element.Name">
                                                                                <option value="">--- Auswahl ---</option>
                                                                                @foreach (var item in tableFormSelectElement.Options)
                                                                                {
                                                                                    <option value="@item.Name">@item.Name</option>
                                                                                }
                                                                            </InputSelect>
                                                                            <label for="@($"form-{table_element.Guid}")">@table_element.Name</label>
                                                                            <ValidationMessage For="() => tableFormSelectElement.Value" />
                                                                        </div>
                                                                    }
                                                                    else if (table_element is FormTextareaElement tableFormTextareaElement)
                                                                    {
                                                                        <div class="form-floating mb-3">
                                                                            <InputTextArea @bind-Value="tableFormTextareaElement.Value" class="form-control" id="@($"form-{table_element.Guid}")" placeholder="@table_element.Name" />
                                                                            <label for="@($"form-{table_element.Guid}")">@table_element.Name</label>
                                                                            <ValidationMessage For="() => tableFormTextareaElement.Value" />
                                                                        </div>
                                                                    }
                                                                    else if (table_element is FormTextElement tableFormTextElement)
                                                                    {
                                                                        <div class="form-floating mb-3">
                                                                            <InputText @bind-Value="tableFormTextElement.Value" class="form-control" id="@($"form-{table_element.Guid}")" placeholder="@table_element.Name" />
                                                                            <label for="@($"form-{table_element.Guid}")">@table_element.Name</label>
                                                                            <ValidationMessage For="() => tableFormTextElement.Value" />
                                                                        </div>
                                                                    }
                                                                </td>


                                                            }
                                                            <td>
                                                                @if (formTableElement.ElementValues.Count > 1)
                                                                {
                                                                    <button type="button" class="btn btn-danger" @onclick="() => formTableElement.ElementValues.Remove(tableRow)"><i class="fa-solid fa-trash"></i></button>
                                                                }
                                                            </td>
                                                        </tr>
                                                    }

                                                    @if (formTableElement.AllowAddRows)
                                                    {
                                                        <tr>
                                                            <td colspan="@formTableElement.Elements.Count">
                                                                <button type="button" class="btn btn-success" @onclick="() => formTableElement.NewRow()"><i class="fa-solid fa-plus"></i></button>
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    }
                                    else if (element is FormTextareaElement formTextareaElement)
                                    {
                                        <div class="form-floating mb-3">
                                            <InputTextArea @bind-Value="formTextareaElement.Value" class="form-control" id="@($"form-{element.Guid}")" placeholder="@element.Name" />
                                            <label for="@($"form-{element.Guid}")">@element.Name</label>
                                            <ValidationMessage For="() => formTextareaElement.Value" />
                                        </div>
                                    }
                                    else if (element is FormTextElement formTextElement)
                                    {
                                        <div class="form-floating mb-3">
                                            <InputText @bind-Value="formTextElement.Value" class="form-control" id="@($"form-{element.Guid}")" placeholder="@element.Name" />
                                            <label for="@($"form-{element.Guid}")">@element.Name</label>
                                            <ValidationMessage For="() => formTextElement.Value" />
                                        </div>
                                    }
                                }
                            </div>
                        }
                    }
                </div>
            }
        }

        @if (IsAdmin || (!IsCompleted && !Input.IsApproved && (!RequiresApproval || IsAllowedToApprove)))
        {
            <div class="toolbar">
                @if (_isSaving)
                {
                    <LoadingButton ButtonClass="btn btn-success" />
                }
                else
                {
                    <button type="button" class="btn btn-success" @onclick="SubmitAsync">Absenden</button>
                }
            </div>
        }
    </EditForm>

    @if (_showHistory)
    {
        <Modal Title="Verlauf"
               ModalSize="ModalSize.XL"
               OnClosed="() => _showHistory = false">
            <EntryHistory EntryId="Input.Id" />
        </Modal>
    }
}

@if (_showStatusModal)
{
    <Modal Title="Status ändern"
           OnClosed="() => _showStatusModal = false"
           HideFooter="true">

        <StatusChangeEditor Entry="Input"
                            User="_user"
                            OnSaved="OnEntryStatusSavedAsync"
                            OnCancel="() => _showStatusModal = false" />

    </Modal>
}

